---
# install VDO given the case of a non-stock kernel
- hosts: localhost
  connection: local
  gather_facts: yes
  become_method: su
  become: yes

  vars:
    custom_kernel: kernel-ml
    #vdo_version: HEAD
    vdo_version: 6.1.3.4
    tmpdir: "~/tmp"

  tasks:
    - name: install build dependencies
      yum:
        state: present
        name:
          - '@development'
          - lvm2-devel
          - zlib-devel
          - "{{ custom_kernel }}-headers"
          - "{{ custom_kernel }}-devel"

    - block:
        - name: get current kvdo version
          command: modinfo kvdo -F version
          changed_when: no
          register: current_version
          failed_when: current_version != vdo_version
      rescue:
        - name: clear the git cloned paths if they exist
          file:
            state: absent
            path: "{{ tmpdir }}/{{ item }}"
          loop:
            - vdo
            - kvdo

        - name: git clone vdo
          git:
            clone: yes
            repo: 'https://github.com/dm-vdo/vdo.git'
            version: "{{ vdo_version }}"
            dest: "{{ tmpdir }}/vdo"

        - name: git clone kvdo
          git:
            clone: yes
            repo: 'https://github.com/dm-vdo/kvdo.git'
            version: "{{ vdo_version }}"
            dest: "{{ tmpdir }}/kvdo"

        - name: make vdo
          command: make
          args:
            chdir: "{{ tmpdir }}/vdo"

        - name: make kvdo
          command: "make -C /usr/src/kernels/{{ ansible_kernel }} M={{ tmpdir }}/kvdo"
          args:
            chdir: "{{ tmpdir }}/kvdo"

        - name: copy modules to current kernel
          synchronize:
            src: "{{ tmpdir }}/{{ item }}"
            dest: /lib/modules/{{ ansible_kernel }}/extra/
          loop:
            - uds/uds.ko
            - vdo/kvdo.ko

        - name: depmod
          command: depmod -a
          args:
            chdir: "{{ tmpdir }}/kvdo"
          changed_when: no

        - name: modprobe
          modprobe:
            state: present
            name: "{{ item }}"
          loop:
            - uds
            - kvdo

        - name: verify vdo in lsmod
          shell: lsmod | grep vdo
          register: lsmod_check

        - debug:
            msg: "{{ lsmod_check.stdout }}"

        - name: make install vdo userland tools
          command: make install
          args:
            chdir: "{{ tmpdir }}/vdo"

        - name: re-start vdo
          systemd:
            name: vdo
            state: restarted
            daemon_reload: yes
